@{
  Layout = "_Layout";
}

@model FoodFinder.Models.Recipe

<h1>RECIPE DETAILS:</h1>
<hr />
<h3>@Html.DisplayNameFor(model => model.Name): @Html.DisplayFor(model => model.Name)</h3>

@if(@Model.JoinEntities.Count == 0)
{
  <p>This Recipe does not belong to any Restaurants. Click "edit recipe" to add to a Restaurant.</p>
}
else
{
  <h4>Restaurants the Recipe belongs to:</h4>
  <ul>
  @foreach(var join in Model.JoinEntities)
  {
    <li>@join.Restaurant.Name</li>
    @using (Html.BeginForm("DeleteRestaurant", "Recipes"))
    {
      @Html.Hidden("joinId", @join.RecipeRestaurantId)
      <input type="submit" value="Delete" class="htmlButton"/>
    }
  }
  </ul>
}

@if(@Model.JoinEntities2.Count == 0)
{
  <p>This Recipe does not have any Ingredients, you should add some!</p>
}
else
{
  <h4>Recipe's Ingredients: </h4>
  <ul>
  @foreach(var join in Model.JoinEntities2)
  {
    <div class="ingredientlist">
      <li>
      @using (Html.BeginForm("DeleteIngredient", "Recipes"))
      {
        @Html.Hidden("joinId", @join.IngredientRecipeId)
        @Html.ActionLink($"{@join.Ingredient.Name}", "Details", "Ingredients", new { id = @join.Ingredient.IngredientId, }, new { @class ="ingredientname"})
        <input class = "recipetrashicon" type = "image" img src="https://raw.githubusercontent.com/GarrettHays/images/main/noun-trash-can-2342129.png" style="width:20px;">    
      }
      </li>
    </div>
  }
  </ul>
}

<p>
@Html.ActionLink("Add an Ingredient", "Create", "Ingredients", null, new { @class ="htmlButton"}) |
@Html.ActionLink("Edit Recipe", "Edit", null, new { id = Model.RecipeId }, new { @class ="htmlButton"})
</p>